/*** 4.3章 1.バランスを保つための変形操作 **
(** Binary Tree using data[7] **)
57(0000000000CE2430) (22(0000000000CE2450) , 80(0000000000CE2470)) 
22(0000000000CE2450) (14(0000000000CE2490) , 34(0000000000CE24B0)) 
14(0000000000CE2490) (0(0000000000000000) , 0(0000000000000000))
34(0000000000CE24B0) (0(0000000000000000) , 0(0000000000000000))
80(0000000000CE2470) (70(0000000000CE24D0) , 87(0000000000CE24F0)) 
70(0000000000CE24D0) (0(0000000000000000) , 0(0000000000000000))
87(0000000000CE24F0) (0(0000000000000000) , 0(0000000000000000))
ノード番号と回転向きを入力(例: 57 1 (1:右、2:左,0:終了)): 57 1
up=0000000000CE2430,v=0000000000CE2430,x=57,rot=1
Judgement(rc = 5) 正常 (処理系未作成)
ノード番号と回転向きを入力(例: 57 1 (1:右、2:左,0:終了)): 22 2
up=0000000000CE2430,v=0000000000CE2450,x=22,rot=2
Judgement(rc = 5) 正常 (処理系未作成)
ノード番号と回転向きを入力(例: 57 1 (1:右、2:左,0:終了)): 14 1
Judgement(rc = 3) 右回転不可
ノード番号と回転向きを入力(例: 57 1 (1:右、2:左,0:終了)): 14 2
Judgement(rc = 4) 左回転不可
ノード番号と回転向きを入力(例: 57 1 (1:右、2:左,0:終了)): 87 1
Judgement(rc = 3) 右回転不可
ノード番号と回転向きを入力(例: 57 1 (1:右、2:左,0:終了)): 0
*/

