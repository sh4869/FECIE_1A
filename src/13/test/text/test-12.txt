/* (P.66) アルゴリズム 4.2 2分探索木への要素の削除 **
(** Binary Tree using data[11] **)
60(0xb55220) (30(0xb55240) , 80(0xb55280))
30(0xb55240) (24(0xb55260) , 34(0xb552c0))
24(0xb55260) (14(0xb552a0) , 0((nil)))
14(0xb552a0) ( 4(0xb55320) , 17(0xb55340))
 4(0xb55320) (0((nil)) , 0((nil)))
17(0xb55340) (0((nil)) , 0((nil)))
34(0xb552c0) (0((nil)) , 59(0xb55360))
59(0xb55360) (0((nil)) , 0((nil)))
80(0xb55280) (71(0xb552e0) , 87(0xb55300))
71(0xb552e0) (0((nil)) , 0((nil)))
87(0xb55300) (0((nil)) , 0((nil)))
正整数を入力してください(0は終了):80
80(0xb55280): deleted
正整数を入力してください(0は終了):1
削除対象(key=1) 無し
正整数を入力してください(0は終了):-1
(headの内容=0xb55220)
60(0xb55220) (30(0xb55240) , 71(0xb55280))
30(0xb55240) (24(0xb55260) , 34(0xb552c0))
24(0xb55260) (14(0xb552a0) , 0((nil)))
14(0xb552a0) ( 4(0xb55320) , 17(0xb55340))
 4(0xb55320) (0((nil)) , 0((nil)))
17(0xb55340) (0((nil)) , 0((nil)))
34(0xb552c0) (0((nil)) , 59(0xb55360))
59(0xb55360) (0((nil)) , 0((nil)))
71(0xb55280) (0((nil)) , 87(0xb55300))
87(0xb55300) (0((nil)) , 0((nil)))
正整数を入力してください(0は終了):30
30(0xb55240): deleted
正整数を入力してください(0は終了):-1
(headの内容=0xb55220)
60(0xb55220) (24(0xb55240) , 71(0xb55280))
24(0xb55240) (14(0xb552a0) , 34(0xb552c0))
14(0xb552a0) ( 4(0xb55320) , 17(0xb55340))
 4(0xb55320) (0((nil)) , 0((nil)))
17(0xb55340) (0((nil)) , 0((nil)))
34(0xb552c0) (0((nil)) , 59(0xb55360))
59(0xb55360) (0((nil)) , 0((nil)))
71(0xb55280) (0((nil)) , 87(0xb55300))
87(0xb55300) (0((nil)) , 0((nil)))
正整数を入力してください(0は終了):0

*/
