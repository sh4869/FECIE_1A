# 課題1-1

## プログラム

```
#include <stdio.h>
#define MAX 30

int main(void){
  int i,j;
  int n = 7;
  int start = 6;
  printf("sun mon tue wed thu fri sat\n");
  for(i = 1;i<=MAX;i++){
    if(i == 1){
      for(j=0;j<start;j++){
        printf("    ");
      }
    }
    printf(" %3d",i);
    if(start == 6){
      start = 0;
      printf("\n");
    } else {
      start++;
    }
  }
  printf("\n");
}
```

## 出力


sun mon tue wed thu fri sat
                           1
   2   3   4   5   6   7   8
   9  10  11  12  13  14  15
  16  17  18  19  20  21  22
  23  24  25  26  27  28  29
  30

# 課題1-2


## プログラム

```
#include <stdio.h>
#define MAX 30

int main(void){
  int i,j;
  int n = 7;
  int start = 6;
  printf("sun mon tue wed thu fri sat\n");
  i = 1;
  while(i<=MAX){
    if(i == 1){
      j = 0;
      while(j<start){
        printf("    ");
        j++;
      }
    }
    printf(" %3d",i);
    if(start == 6){
      start = 0;
      printf("\n");
    } else {
      start++;
    }
    i++;
  }
  printf("\n");
}
```

## 出力


sun mon tue wed thu fri sat
                           1
   2   3   4   5   6   7   8
   9  10  11  12  13  14  15
  16  17  18  19  20  21  22
  23  24  25  26  27  28  29
  30

# 課題1-3

## プログラム

```
#include <stdio.h>
int func(){
  int i,m,k=100;
  for(i=0;i<5;i++){
    m = k+i;
    printf("f:m=%d\n",m);
  }
  printf("f:k=%d\n",k);
  return 1;
}

int main(void){
  int m,k = 14;
  printf("main-1: k=%d\n",k);
  func();
  printf("main-2: k=%d\n",k);
  return  1;
}

```

## 出力

main-1: k=14
f:m=100
f:m=101
f:m=102
f:m=103
f:m=104
f:k=100
main-2: k=14

## 解説

変数kはローカル変数であるので，それぞれの出力にて影響を受けない．func関数ないでkに100が代入されても，それは影響をしないのでmain-2においてもkは14のままである．

# 課題1-4

## プログラム

```
#include <stdio.h>

int k;
int func(){
  int i,m;
  k = 100;
  for(i=0;i<5;i++){
    m=k+i;
    printf("f : m=%d\n",m);
  }
  printf("f:k=%d\n",k);
  return 1;
}


int main(void){
  int m;
  printf("main-1: k=%d\n",k);
  func();
  printf("main-2: k=%d\n",k);
  return  1;
}
```

## 出力

main-1: k=0
f : m=100
f : m=101
f : m=102
f : m=103
f : m=104
f:k=100
main-2: k=100

## 解説

こちらのプログラムではkはグローバル変数であるため，func関数でkに値が代入されるとmain-2でもその値が反映されている．

# 課題1-5

## プログラム

```
#include <stdio.h>

int arr[4];

void f(){
  arr[2] = 2;
  arr[3] = 3;
}

int main(void){
  arr[0] = 0;
  arr[1] = 1;
  f();
  printf("arr[]={%d,%d,%d,%d}\n",arr[0],arr[1],arr[2],arr[3]);
}
```

## 出力

arr[]={0,1,2,3}

# 課題1-6

## プログラム

```
#include <stdio.h>

void f(int *arr){
  arr[2] = 2;
  arr[3] = 3;
}

int main(void){
  int arr[4];
  arr[0] = 0;
  arr[1] = 1;
  f(arr);
  printf("arr[]={%d,%d,%d,%d}\n",arr[0],arr[1],arr[2],arr[3]);
}
```


## 出力

arr[]={0,1,2,3}

# 課題1-7

## プログラム

```
#include <stdio.h>

int main(void){
  int k;
  for(k=0;k<5;k++){
    if(k==3) break;
    printf("k=%d\n",k);
  }
}
```

## 出力

k=0
k=1
k=2

## 解説

k==3でbreakが入るので，3以降の数字は出力されない.

# 課題1-8

## プログラム

```
#include <stdio.h>

int main(void){
  int k;
  for(k=0;k<5;k++){
    if(k==2) continue;
    if(k==4) continue;
    printf("k=%d\n",k);
  }
}
```

## 出力

k=0
k=1
k=3

## 解説

kが2であるときと4であるときはcontinue文によってそのあとの処理が省略されるため2と4は出力されない．

# 課題1-9

## プログラム

```
#include <stdio.h>

int print_array(int *arr){
  int i;
  printf("arr[]={");
  for(i=0;i<3;i++){
    printf("%d ",arr[i]);
  }
  printf("}\n");
  return 0;
}

int main(void){
  int i,k1,k2,k3,arr[3],sum;
  sum = 0;
  for(k1=5;k1>=0;k1--){
    arr[0] = k1;
    sum = sum+k1;
    for(k2=5;k2 >= 0;k2--){
      arr[1] = k2;
      sum+=k2;
      if(sum>5){
        sum -= k2;
        continue;
      }
      if(arr[0] < arr[1]) {
        sum-=k2;
        continue;
      }
      for(k3=5;k3 >=0;k3--){
        arr[2] = k3;
        sum = sum + k3;
        if(sum>5){
          sum -= k3;
          continue;
        }
        if(arr[1]<arr[2]) {
          sum -= k3;
          continue;
        }
        if(sum==5){
          print_array(arr);
        }
        sum -= k3;
      }
      sum -= k2;
    }
    sum -= k1;
  }
}
```

## 出力

arr[]={5 0 0 }
arr[]={4 1 0 }
arr[]={3 2 0 }
arr[]={3 1 1 }
arr[]={2 2 1 }

# 課題1-10

## プログラム

```
#include <stdio.h>

int kago[3];

int main(void){
  printf("kagoに5つのballを入れるプログラム\n");
  int k1,k2,k3;
  for(k1=5;k1>=0;k1--){
    kago[0] = k1;
    for(k2=5;k2>=0;k2--){
      kago[1] = k2;
      if(k1+k2>5) continue;
      if(k1<k2) continue;
      for(k3=5;k3>=0;k3--){
        kago[2] = k3;
        if(k2<k3) continue;
        if(k1+k2+k3 == 5){
          printf("kago[]={%d %d %d}\n",kago[0],kago[1],kago[2]);
        }
      }
    }
  }
}
```

## 出力

kagoに5つのballを入れるプログラム
kago[]={5 0 0}
kago[]={4 1 0}
kago[]={3 2 0}
kago[]={3 1 1}
kago[]={2 2 1}

# 課題1-11

## プログラム

```
#include <stdio.h>

int kago[3];
int func(int n,int sum){
  int k;
  if(n==4){
    if(sum==5){
      printf("kago[]={%d %d %d}\n",kago[0],kago[1],kago[2]);
    }
    return 0;
  }
  for(k=5;k>=0;k--){
    kago[n-1] = k;
    if(n==1){
      func(n+1,kago[n-1]);
    } else {
      if(sum+k>5) continue;
      if(kago[n-2]<kago[n-1]) {
        continue;
      } else {
        func(n+1,kago[0]+kago[1]+kago[2]);
      }
    }
  }
}

int main(void){
  printf("kagoに5つのballを入れるプログラム\n");
  func(1,0);
  return 0;
}
```

## 出力

kagoに5つのballを入れるプログラム
kago[]={5 0 0}
kago[]={4 1 0}
kago[]={3 2 0}
kago[]={3 1 1}
kago[]={2 2 1}

# 課題1-12

## プログラム

### 効率のよいプログラム

```

#include <stdio.h>

int kago[3];

int main(void){
  printf("kagoに5つのballを入れるプログラム\n");
  int k1,k2,k3;
  for(k1=5;k1>=0;k1--){
    kago[0] = k1;
    for(k2=5;k2>=0;k2--){
      if(k2 > k1 || k2 > 5 - k1) continue;
      kago[1] = k2;
      for(k3=5;k3>=0;k3--){
        if(k3 > k2 || k3 > 5 - k1 - k2) continue;
        kago[2] = k3;
        if(k1+k2+k3 == 5){
          printf("kago[]={%d %d %d}\n",kago[0],kago[1],kago[2]);
        }
      }
    }
  }
}
```
### 任意の値に対応するプログラム

```
#include <stdio.h>

int count,num;

void print_array(int *array,int length){
  int i;
  printf("arr[]={");
  for(i=0;i<length;i++){
    printf("%d ",array[i]);
  }
  printf("}\n");
}

int calc_array_sum(int *array,int length){
  int i;
  int sum = 0;
  for(i=0;i<length;i++){
    sum += array[i];
  }
  return sum;
}

int func(int *arr,int n,int sum){
  int k;
  if(n==num+1){
    if(sum==count){
      print_array(arr,num);
    }
    return 0;
  }
  for(k=count;k>=0;k--){
    arr[n-1] = k;
    if(n==1){
      func(arr,n+1,arr[n-1]);
    } else {
      if(sum+k>count) continue;
      if(arr[n-2]<arr[n-1]) {
        continue;
      } else {
        func(arr,n+1,calc_array_sum(arr,num));
      }
    }
  }
}

int main(void){
  printf("kagoに5つのballを入れるプログラム\n");
  printf("ballの個数を入力してください:");
  scanf("%d",&count);
  printf("かごの個数を入力してください:");
  scanf("%d",&num);
  int kago[num];
  func(kago,1,0);
  return 0;
}
```

## 出力

(効率のよい方は省略)

kagoに5つのballを入れるプログラム                  
ballの個数を入力してください:12                    
かごの個数を入力してください:13                      
arr[]={12 0 0 0 0 0 0 0 0 0 0 0 0 }    
arr[]={11 1 0 0 0 0 0 0 0 0 0 0 0 }    
arr[]={10 2 0 0 0 0 0 0 0 0 0 0 0 }    
arr[]={10 1 1 0 0 0 0 0 0 0 0 0 0 }    
arr[]={9 3 0 0 0 0 0 0 0 0 0 0 0 }     
arr[]={9 2 1 0 0 0 0 0 0 0 0 0 0 }     
arr[]={9 1 1 1 0 0 0 0 0 0 0 0 0 }     
arr[]={8 4 0 0 0 0 0 0 0 0 0 0 0 }     
arr[]={8 3 1 0 0 0 0 0 0 0 0 0 0 }     
arr[]={8 2 2 0 0 0 0 0 0 0 0 0 0 }     
arr[]={8 2 1 1 0 0 0 0 0 0 0 0 0 }     
arr[]={8 1 1 1 1 0 0 0 0 0 0 0 0 }     
arr[]={7 5 0 0 0 0 0 0 0 0 0 0 0 }     
arr[]={7 4 1 0 0 0 0 0 0 0 0 0 0 }     
arr[]={7 3 2 0 0 0 0 0 0 0 0 0 0 }     
arr[]={7 3 1 1 0 0 0 0 0 0 0 0 0 }     
arr[]={7 2 2 1 0 0 0 0 0 0 0 0 0 }     
arr[]={7 2 1 1 1 0 0 0 0 0 0 0 0 }     
arr[]={7 1 1 1 1 1 0 0 0 0 0 0 0 }     
arr[]={6 6 0 0 0 0 0 0 0 0 0 0 0 }     
arr[]={6 5 1 0 0 0 0 0 0 0 0 0 0 }     
arr[]={6 4 2 0 0 0 0 0 0 0 0 0 0 }     
arr[]={6 4 1 1 0 0 0 0 0 0 0 0 0 }     
arr[]={6 3 3 0 0 0 0 0 0 0 0 0 0 }     
arr[]={6 3 2 1 0 0 0 0 0 0 0 0 0 }     
arr[]={6 3 1 1 1 0 0 0 0 0 0 0 0 }     
arr[]={6 2 2 2 0 0 0 0 0 0 0 0 0 }     
arr[]={6 2 2 1 1 0 0 0 0 0 0 0 0 }     
arr[]={6 2 1 1 1 1 0 0 0 0 0 0 0 }     
arr[]={6 1 1 1 1 1 1 0 0 0 0 0 0 }     
arr[]={5 5 2 0 0 0 0 0 0 0 0 0 0 }     
arr[]={5 5 1 1 0 0 0 0 0 0 0 0 0 }     
arr[]={5 4 3 0 0 0 0 0 0 0 0 0 0 }     
arr[]={5 4 2 1 0 0 0 0 0 0 0 0 0 }     
arr[]={5 4 1 1 1 0 0 0 0 0 0 0 0 }     
arr[]={5 3 3 1 0 0 0 0 0 0 0 0 0 }     
arr[]={5 3 2 2 0 0 0 0 0 0 0 0 0 }     
arr[]={5 3 2 1 1 0 0 0 0 0 0 0 0 }     
arr[]={5 3 1 1 1 1 0 0 0 0 0 0 0 }     
arr[]={5 2 2 2 1 0 0 0 0 0 0 0 0 }     
arr[]={5 2 2 1 1 1 0 0 0 0 0 0 0 }     
arr[]={5 2 1 1 1 1 1 0 0 0 0 0 0 }     
arr[]={5 1 1 1 1 1 1 1 0 0 0 0 0 }     
arr[]={4 4 4 0 0 0 0 0 0 0 0 0 0 }     
arr[]={4 4 3 1 0 0 0 0 0 0 0 0 0 }     
arr[]={4 4 2 2 0 0 0 0 0 0 0 0 0 }     
arr[]={4 4 2 1 1 0 0 0 0 0 0 0 0 }     
arr[]={4 4 1 1 1 1 0 0 0 0 0 0 0 }     
arr[]={4 3 3 2 0 0 0 0 0 0 0 0 0 }     
arr[]={4 3 3 1 1 0 0 0 0 0 0 0 0 }     
arr[]={4 3 2 2 1 0 0 0 0 0 0 0 0 }     
arr[]={4 3 2 1 1 1 0 0 0 0 0 0 0 }     
arr[]={4 3 1 1 1 1 1 0 0 0 0 0 0 }     
arr[]={4 2 2 2 2 0 0 0 0 0 0 0 0 }     
arr[]={4 2 2 2 1 1 0 0 0 0 0 0 0 }     
arr[]={4 2 2 1 1 1 1 0 0 0 0 0 0 }     
arr[]={4 2 1 1 1 1 1 1 0 0 0 0 0 }     
arr[]={4 1 1 1 1 1 1 1 1 0 0 0 0 }     
arr[]={3 3 3 3 0 0 0 0 0 0 0 0 0 }     
arr[]={3 3 3 2 1 0 0 0 0 0 0 0 0 }     
arr[]={3 3 3 1 1 1 0 0 0 0 0 0 0 }     
arr[]={3 3 2 2 2 0 0 0 0 0 0 0 0 }     
arr[]={3 3 2 2 1 1 0 0 0 0 0 0 0 }     
arr[]={3 3 2 1 1 1 1 0 0 0 0 0 0 }     
arr[]={3 3 1 1 1 1 1 1 0 0 0 0 0 }     
arr[]={3 2 2 2 2 1 0 0 0 0 0 0 0 }     
arr[]={3 2 2 2 1 1 1 0 0 0 0 0 0 }     
arr[]={3 2 2 1 1 1 1 1 0 0 0 0 0 }     
arr[]={3 2 1 1 1 1 1 1 1 0 0 0 0 }     
arr[]={3 1 1 1 1 1 1 1 1 1 0 0 0 }     
arr[]={2 2 2 2 2 2 0 0 0 0 0 0 0 }     
arr[]={2 2 2 2 2 1 1 0 0 0 0 0 0 }     
arr[]={2 2 2 2 1 1 1 1 0 0 0 0 0 }     
arr[]={2 2 2 1 1 1 1 1 1 0 0 0 0 }     
arr[]={2 2 1 1 1 1 1 1 1 1 0 0 0 }     
arr[]={2 1 1 1 1 1 1 1 1 1 1 0 0 }     
arr[]={1 1 1 1 1 1 1 1 1 1 1 1 0 }     
